
(djngo_env) [malvin@techvne djngo_proj]$ ls
beauasia    db1.sqlite3  djngo_proj  manage.py
credntials  djngo_env    lrc
(djngo_env) [malvin@techvne djngo_proj]$ python manage.py shell
Python 3.8.2 (default, Apr  8 2020, 14:31:25) 
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from credntials.model import AccHolder
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'credntials.model'
>>> from credntials.models import AccHolder
>>> cacc=AccHolder(nameofholder='anita', emailid='anita@hotmail', mobno=44778851245)
>>> cacc.save()
>>> AccHolder.objects.create(nameofholder='sruthi', emailid='sruthi@yahoo', mobno=44989895623)
<AccHolder: AccHolder object (6)>
>>> AccHolder[1]
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'ModelBase' object is not subscriptable
>>> cacc[1]
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'AccHolder' object is not subscriptable
>>> AccHolder.objects.all()
<QuerySet [<AccHolder: AccHolder object (1)>, <AccHolder: AccHolder object (2)>, <AccHolder: AccHolder object (3)>, <AccHolder: AccHolder object (4)>, <AccHolder: AccHolder object (5)>, <AccHolder: AccHolder object (6)>]>
>>> AccHolder.objects.get(id=1).nameofholder
<AccHolder: AccHolder object (1)>
>>> AccHolder.objects.get(id=31).nameofholder
'vinod'
>>> AccHolder.objects.get(id=3).nameofholder
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/query.py", line 406, in get
    raise self.model.DoesNotExist(
credntials.models.AccHolder.DoesNotExist: AccHolder matching query does not exist.
>>> AccHolder.objects.get(id=3).nameofholder
'chitra'
>>> AccHolder.objects.filter().nameofholder
<QuerySet [<AccHolder: AccHolder object (1)>, <AccHolder: AccHolder object (2)>, <AccHolder: AccHolder object (3)>, <AccHolder: AccHolder object (4)>, <AccHolder: AccHolder object (5)>, <AccHolder: AccHolder object (6)>]>
>>> AccHolder.objects.filter(name='vinod')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'nameofholder'
>>> AccHolder.objects.filter(nameofholder='vinod')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/query.py", line 892, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/query.py", line 910, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/sql/query.py", line 1290, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/sql/query.py", line 1315, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/sql/query.py", line 1190, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/sql/query.py", line 1049, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/sql/query.py", line 1419, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'name' into field. Choices are: credntials, emailid, id, mobno, nameofholder
>>> AccHolder.objects.filter(nameofholder='vinod' || nameofholder='chitra')
<QuerySet [<AccHolder: AccHolder object (1)>]>
>>> AccHolder.objects.filter(nameofholder='vinod' || nameofholder='chitra')
  File "<console>", line 1
    AccHolder.objects.filter(nameofholder='vinod' || nameofholder='chitra')
                                                   ^
SyntaxError: invalid syntax
>>> AccHolder.objects.order_by('nameofholder')
<QuerySet [<AccHolder: AccHolder object (5)>, <AccHolder: AccHolder object (3)>, <AccHolder: AccHolder object (2)>, <AccHolder: AccHolder object (4)>, <AccHolder: AccHolder object (6)>, <AccHolder: AccHolder object (1)>]>
>>> AccHolder.objects.all()
<QuerySet [<AccHolder: AccHolder object (1)>, <AccHolder: AccHolder object (2)>, <AccHolder: AccHolder object (3)>, <AccHolder: AccHolder object (4)>, <AccHolder: AccHolder object (5)>, <AccHolder: AccHolder object (6)>]>
>>> 
now exiting InteractiveConsole...
(djngo_env) [malvin@techvne djngo_proj]$ python manage.py makemigrations
No changes detected
(djngo_env) [malvin@techvne djngo_proj]$ python manage.py migration
Unknown command: 'migrations'. Did you mean showmigrations?
Type 'manage.py help' for usage.
(djngo_env) [malvin@techvne djngo_proj]$ python manage.py migrate
Unknown command: 'migration'. Did you mn showmigrations?
Type 'manage.py help' for usage.
(djngo_env) [malvin@techvne djngo_proj]$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, credntials, sessions
Running migrations:
  No migrations to apply.
(djngo_env) [malvin@techvne djngo_proj]$ python manage.py shell
Python 3.8.2 (default, Apr  8 2020, 14:31:25) 
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from credntials.models import AccHolder
>>> AccHolder.objects.all()
<QuerySet [<AccHolder: vinod>, <AccHolder: malini>, <AccHolder: chitra>, <AccHolder: manoj menon>, <AccHolder: anita>, <AccHolder: sruthi>]>
>>> name=AccHolder.objects.order_by("nameofholder")
<QuerySet [<AccHolder: anita>, <AccHolder: chitra>, <AccHolder: malini>, <AccHolder: manoj menon>, <AccHolder: sruthi>, <AccHolder: vinod>]>
>>> name=AccHolder.objects.order_by("nameofholder")
>>> name[1].nameofholder
<AccHolder: chitra>
>>> name[1].nameofholder
'chitra'
>>> AccHolder.objects.all()
<QuerySet [<AccHolder: vinod>, <AccHolder: malini>, <AccHolder: chitra>, <AccHolder: manoj menon>, <AccHolder: anita>, <AccHolder: sruthi>]>
>>> AccHolder.objects.all()[1:3].nameofholder
  File "<console>", line 1
    AccHolder.objects.all().[1:3]
                            ^
SyntaxError: invalid syntax
>>> AccHolder.objects.all()[1:3]
<QuerySet [<AccHolder: malini>, <AccHolder: chitra>]>
>>> AccHolder.objects.all()[1:3].nameofholder
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'nameofholder'
>>> qrs1=AccHolder.objects.all()[0:3]
>>> qrs1.nameofholder
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'nameofholder'
>>> qrs1[1].emailid
<AccHolder: malini>
>>> qrs1[1].emailid
'malini@gmail.com'
>>> print(qrs1)
<QuerySet [<AccHolder: vinod>, <AccHolder: malini>, <AccHolder: chitra>]>
>>> for x in qrs1:
... print(x.nameofholder)
  File "<console>", line 2
    print(x.nameofholder)
    ^
IndentationError: expected an indented block
>>> for x in qrs1:
... 
... 
now exiting InteractiveConsole...
(djngo_env) [malvin@techvne djngo_proj]$ python manage.py shell
Python 3.8.2 (default, Apr  8 2020, 14:31:25) 
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from credntials.models import AccHolder
>>> qrs2=AccHolder.objects.all()[0:]
>>> print(qrs2.nameofholder)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'pritn' is not defined
>>> print(qrs2['nameofholder'])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'nameofholder'
>>> print(qrs2[1])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/home/malvin/.local/lib/python3.8/site-packages/django/db/models/query.py", line 284, in __getitem__
    raise TypeError
TypeError
>>> print(qrs2[nameofholder])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'nameofholder' is not defined
>>> print(qrs2[2])
malini
>>> print(qrs2[2])
chitra
>>> for z in qrs2:
... print(z)
  File "<console>", line 2
    print(z)
    ^
IndentationError: expected an indented block
>>> for z in qrs2:
...     print(z)
... 
vinod
malini
chitra
>>> qrs2=AccHolder.objects.all()[0:]
>>> for z in qrs2:
...     print(z)
... 
vinod
malini
chitra
manoj menon
anita
sruthi
>>> 
>>> 